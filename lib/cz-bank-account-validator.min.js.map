{"version":3,"file":"cz-bank-account-validator.min.js","mappings":"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","sources":["webpack://cz-bank-account-validator/webpack/universalModuleDefinition","webpack://cz-bank-account-validator/./src/bankCodes.js","webpack://cz-bank-account-validator/./src/util.js","webpack://cz-bank-account-validator/webpack/bootstrap","webpack://cz-bank-account-validator/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cz-bank-account-validator\"] = factory();\n\telse\n\t\troot[\"cz-bank-account-validator\"] = factory();\n})(this, () => {\nreturn ","// https://www.kurzy.cz/seznamy/kody-bank/\nexport const bankCodes = {\n    '0100': {\n        bankName: 'Komerční banka, a.s.',\n    },\n    '0300': {\n        bankName: 'ČSOB, a.s.',\n    },\n    '0600': {\n        bankName: 'MONETA Money Bank, a.s.',\n    },\n    '0710': {\n        bankName: 'Česká národní banka',\n    },\n    '0800': {\n        bankName: 'Česká spořitelna, a.s.',\n    },\n    '2010': {\n        bankName: 'Fio banka, a.s.',\n    },\n    '2020': {\n        bankName: 'MUFG Bank (Europe) N.V. Prague Branch',\n    },\n    '2030': {\n        bankName: 'AKCENTA, spořitelní a úvěrní družstvo',\n    },\n    '2060': {\n        bankName: 'Citfin, spořitelní družstvo',\n    },\n    '2070': {\n        bankName: 'Moravský Peněžní Ústav – spořitelní družstvo',\n    },\n    '2100': {\n        bankName: 'Hypoteční banka, a.s.',\n    },\n    '2200': {\n        bankName: 'Peněžní dům, spořitelní družstvo',\n    },\n    '2220': {\n        bankName: 'Artesa, spořitelní družstvo',\n    },\n    '2240': {\n        bankName: 'Poštová banka, a.s., pobočka Česká republika',\n    },\n    '2250': {\n        bankName: 'Banka CREDITAS a.s.',\n    },\n    '2260': {\n        bankName: 'ANO spořitelní družstvo',\n    },\n    '2310': {\n        bankName: 'ZUNO BANK AG, organizační složka',\n    },\n    '2600': {\n        bankName: 'Citibank Europe plc, organizační složka',\n    },\n    '2700': {\n        bankName: 'UniCredit Bank Czech Republic and Slovakia, a.s.',\n    },\n    '3030': {\n        bankName: 'Air Bank a. s.',\n    },\n    '3050': {\n        bankName: 'BNP Paribas Personal Finance SA, odštěpný závod',\n    },\n    '3060': {\n        bankName: 'PKO BP S.A., Czech Branch',\n    },\n    '3500': {\n        bankName: 'ING Bank N.V.',\n    },\n    '4000': {\n        bankName: 'Expobank CZ a.s.',\n    },\n    '4300': {\n        bankName: 'Českomoravská záruční a rozvojová banka, a.s.',\n    },\n    '5500': {\n        bankName: 'Raiffeisenbank, a.s.',\n    },\n    '5800': {\n        bankName: 'J&T Banka, a.s.',\n    },\n    '6000': {\n        bankName: 'PPF banka a.s.',\n    },\n    '6100': {\n        bankName: 'Equa bank a. s.',\n    },\n    '6200': {\n        bankName: 'COMMERZBANK Aktiengesellschaft, pobočka Praha',\n    },\n    '6210': {\n        bankName: 'mBank S.A., organizační složka',\n    },\n    '6300': {\n        bankName: 'BNP Paribas Fortis SA/NV, pobočka Česká republika',\n    },\n    '6700': {\n        bankName: 'Všeobecná úverová banka a.s., pobočka Praha',\n    },\n    '6800': {\n        bankName: 'Sberbank CZ, a.s.',\n    },\n    '7910': {\n        bankName: 'Deutsche Bank A.G. Filiale Prag',\n    },\n    '7940': {\n        bankName: 'Waldviertler Sparkasse Bank AG',\n    },\n    '7950': {\n        bankName: 'Raiffeisen stavební spořitelna a.s.',\n    },\n    '7960': {\n        bankName: 'Českomoravská stavební spořitelna a. s.',\n    },\n    '7970': {\n        bankName: 'Wüstenrot - stavební spořitelna a.s.',\n    },\n    '7980': {\n        bankName: 'Wüstenrot hypoteční banka, a.s.',\n    },\n    '7990': {\n        bankName: 'Modrá pyramida stavební spořitelna, a.s.',\n    },\n    '8030': {\n        bankName: 'Raiffeisenbank im Stiftland Waldsassen eG pobočka Cheb, odštěpný závod',\n    },\n    '8040': {\n        bankName: 'Oberbank AG pobočka Česká republika',\n    },\n    '8060': {\n        bankName: 'Stavební spořitelna České spořitelny, a.s.',\n    },\n    '8090': {\n        bankName: 'Česká exportní banka, a.s.',\n    },\n    '8150': {\n        bankName: 'HSBC Bank plc - pobočka Praha',\n    },\n    '8200': {\n        bankName: 'PRIVAT BANK AG der Raiffeisenlandesbank Oberösterreich v České republice',\n    },\n    '8220': {\n        bankName: 'Payment Execution s.r.o.',\n    },\n    '8230': {\n        bankName: 'EEPAYS s. r. o.',\n    },\n    '8240': {\n        bankName: 'Družstevní záložna Kredit',\n    },\n    '8250': {\n        bankName: 'Bank of China (Hungary) Close Ltd. Prague branch, odštěpný závod',\n    },\n};\n","const bankAccountCZRegex = /^(([0-9]{0,6})-)?([0-9]{1,10})\\/(\\d{4})$/i;\n\n// checks the mod11 criterion\nexport const mod11 = (number) => {\n    const scale = [1, 2, 4, 8, 5, 10, 9, 7, 3, 6];\n    const reversed = number.split('').reverse();\n\n    const sum = reversed\n        .map((stringPart) => {\n            return parseInt(stringPart);\n        })\n        .map((numberPart, i) => {\n            return scale[i] * numberPart;\n        })\n        .reduce((x, y) => {\n            return x + y;\n        });\n\n    return sum % 11 == 0;\n}\n\nexport const getBankAccountGroups = (bankAccount = '') => {\n    if (typeof bankAccount !== 'string' || bankAccount.length < 1) {\n        return false;\n    }\n\n    const bankAccountString = bankAccount.replaceAll(' ', '');\n    const matchedGroup = bankAccountString.match(bankAccountCZRegex);\n\n    if (matchedGroup && matchedGroup.length) {\n        const prefixCode = matchedGroup[2];\n        const accountNumber = matchedGroup[3];\n        const bankCode = matchedGroup[4];\n        return {\n            prefixCode,\n            accountNumber,\n            bankCode,\n        };\n    }\n    return null;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { bankCodes } from \"./bankCodes\";\nimport { getBankAccountGroups, mod11 } from \"./util\";\n\nexport const getAccountPrefix = (bankAccount) => {\n    const bankAccountMatchedGroups = getBankAccountGroups(bankAccount);\n    return bankAccountMatchedGroups?.prefixCode ?? null;\n  }\n\nexport const getAccountNumber = (bankAccount) => {\n    const bankAccountMatchedGroups = getBankAccountGroups(bankAccount);\n    return bankAccountMatchedGroups?.accountNumber ?? null;\n  }\n\nexport const getBankCode = (bankAccount) => {\n    const bankAccountMatchedGroups = getBankAccountGroups(bankAccount);\n    return bankAccountMatchedGroups?.bankCode ?? null;\n  }\n\nexport const getAllBankCodes = () => {\n    return bankCodes;\n  }\n\n  /**\n   * http://www.zlatakoruna.info/zpravy/ucty/cislo-uctu-v-cr\n   * @param bankAccount\n   */\n  export const validate = (bankAccount = '') => {\n    if (typeof bankAccount !== 'string' || bankAccount.length < 1) {\n      return false;\n    }\n\n    const bankCodeKeys = Object.keys(this.getAllBankCodes());\n    const bankAccountMatchedGroups = getBankAccountGroups(bankAccount);\n\n    if (bankAccountMatchedGroups) {\n      const { prefixCode, accountNumber, bankCode } = bankAccountMatchedGroups;\n\n      const prefixCodeValid = prefixCode ? mod11(prefixCode) : true; // can be empty\n      const accountNumberValid = accountNumber ? mod11(accountNumber) : false;\n      const bankCodeValid = bankCode ? bankCodeKeys.includes(bankCode) : false;\n\n      return prefixCodeValid && accountNumberValid && bankCodeValid;\n    }\n\n    return false;\n  }\n"],"names":["root","factory","exports","module","define","amd","this","bankName","bankAccountCZRegex","number","scale","split","reverse","map","stringPart","parseInt","numberPart","i","reduce","x","y","bankAccount","length","bankAccountString","replaceAll","matchedGroup","match","prefixCode","accountNumber","bankCode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getBankAccountGroups","bankCodeKeys","Object","keys","getAllBankCodes","bankAccountMatchedGroups","prefixCodeValid","mod11","accountNumberValid","bankCodeValid","includes"],"sourceRoot":""}